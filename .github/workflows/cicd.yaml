name: CI_CD Workflow

on:
  push:
    branches:
      - develop
      - feature/**
  pull_request:
    branches:
      - main

jobs:
    # Paso 1: An치lisis de C칩digo Est치tico con CodeQL
    codeql-analysis:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Initialize CodeQL
          uses: github/codeql-action/init@v2
          with:
            languages: 'javascript' 

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@v2

    dependency-check:
        runs-on: ubuntu-latest
        needs: codeql-analysis
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Set up Node.js
            uses: actions/setup-node@v3
            with:
              node-version: '16'
          - name: Install dependencies
            run: npm install
      
          - name: Run npm audit
            run: npm audit --audit-level=high

  # Paso 3: Ejecuci칩n de Pruebas Unitarias
    unit-tests:
        runs-on: ubuntu-latest
        needs: dependency-check
        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Set up Node.js
            uses: actions/setup-node@v3
            with:
              node-version: '16'

          - name: Install dependencies
            run: npm install

          - name: Run unit tests
            run: npm test

    build-feature:
        if: startsWith(github.ref, 'refs/heads/feature/')
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
        # Paso 2: Configurar Google Cloud SDK
        - name: Authenticate to Google Cloud
          uses: google-github-actions/auth@v1
          with:
            credentials_json: ${{ secrets.GCP_SA_KEY }}

        - name: Set up Google Cloud SDK
          uses: google-github-actions/setup-gcloud@v1
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}


           # Paso 3: Autenticar Docker con Google Container Registry (GCR)
        - name: Authenticate Docker with GCR
          run: gcloud auth configure-docker us-central1-docker.pkg.dev

        # Paso 4: Construir la imagen Docker
        - name: Build Docker image
          run: docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops/${{ vars.name_app}}:latest .

        # Paso 5: Subir la imagen a GCR
        - name: Push Docker image to GCR
          run: docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/devsecops/${{ vars.name_app}}:latest
